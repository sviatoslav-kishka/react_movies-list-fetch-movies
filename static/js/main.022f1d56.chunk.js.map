{"version":3,"sources":["components/MovieCard/MovieCard.js","components/MoviesList/MoviesList.js","components/FindMovie/FindMovie.js","api/api.js","App.js","index.js"],"names":["MovieCard","title","description","imgUrl","imdbId","className","src","alt","href","MoviesList","movies","map","movie","key","FindMovie","onSubmit","useState","movieTitle","findMovieByTitle","addfoundMovie","isMovieExsist","changeInputValidation","htmlFor","type","id","placeholder","classNames","value","onChange","event","target","onClick","a","fetch","then","response","json","result","foundMovie","Response","Object","keys","length","Title","Plot","Poster","imdbID","App","state","data","addNewMovie","newMovie","find","setState","prevState","this","Component","ReactDOM","render","document","getElementById"],"mappings":"+yEAIaA,G,kBAAY,SAAC,GAAD,IACvBC,EADuB,EACvBA,MADuB,IAEvBC,mBAFuB,MAET,GAFS,EAGvBC,EAHuB,EAGvBA,OACAC,EAJuB,EAIvBA,OAJuB,OAMvB,yBAAKC,UAAU,QACb,yBAAKA,UAAU,cACb,4BAAQA,UAAU,iBAChB,yBACEC,IAAKH,EACLI,IAAI,gBAIV,yBAAKF,UAAU,gBACb,yBAAKA,UAAU,SACb,yBAAKA,UAAU,cACb,4BAAQA,UAAU,kBAChB,yBACEC,IAAI,wBACJC,IAAI,WAIV,yBAAKF,UAAU,iBACb,uBAAGA,UAAU,cAAcJ,KAI/B,yBAAKI,UAAU,WACZH,EACD,6BACA,uBAAGM,KAAI,qCAAgCJ,IAAvC,aC/BKK,EAAa,SAAC,GAAD,QACxBC,cADwB,MACf,GADe,SAGxB,yBAAKL,UAAU,UACZK,EAAOC,KAAI,SAAAC,GAAK,OACf,kBAAC,EAAD,eAAWC,IAAKD,EAAMR,QAAYQ,S,+DCH3BE,EAAY,SAAC,GAAkB,IAAhBC,EAAe,EAAfA,SAC1B,EAAuCC,mBAAS,IAAhD,mBAAOC,EAAP,KAAmBC,EAAnB,KACA,EAA+BF,mBAAS,IAAxC,mBAAOJ,EAAP,KAAcO,EAAd,KACA,EAA+CH,oBAAS,GAAxD,mBAAOI,EAAP,KAAsBC,EAAtB,KAQA,OACE,oCACE,0BAAMhB,UAAU,cACd,yBAAKA,UAAU,SACb,2BAAOA,UAAU,QAAQiB,QAAQ,eAAjC,eAIA,yBAAKjB,UAAU,WACb,2BACEkB,KAAK,OACLC,GAAG,cACHC,YAAY,0BAEZpB,UAAWqB,IAAW,QAAD,eApBhB,aAoByCN,IAC9CO,MAAOV,EACPW,SAAU,SAACC,GACTX,EAAiBW,EAAMC,OAAOH,OAC9BN,GAAsB,OAK5B,uBAAGhB,UAAU,mBACTe,GAAD,yCAIL,yBAAKf,UAAU,oBACb,yBAAKA,UAAU,WACb,4BACEkB,KAAK,SACLlB,UAAU,kBACV0B,QAAO,sBAAE,4BAAAC,EAAA,sEArCYC,MAAM,GAAD,OCfhB,2CDegB,cAAkBhB,IACrDiB,MAAK,SAAAC,GAAQ,OAAIA,EAASC,UAC1BF,MAAK,SAAAG,GAAM,OAAIA,KAmCG,OAGqB,UAFtBC,EADC,QAGQC,SACbpB,EAAcmB,GAEdjB,GAAsB,GANjB,4CAHX,iBAiBF,yBAAKhB,UAAU,WACb,4BACEkB,KAAK,SACLlB,UAAU,oBACV0B,QAAS,WACHS,OAAOC,KAAK7B,GAAO8B,OAAS,IAC9B3B,EAAS,CACPd,MAAOW,EAAM+B,MACbzC,YAAaU,EAAMgC,KACnBzC,OAAQS,EAAMiC,OACdzC,OAAQQ,EAAMkC,SAEhB5B,EAAiB,IACjBC,EAAc,OAZpB,sBAsBLqB,OAAOC,KAAK7B,GAAO8B,OAAS,GAC3B,yBAAKrC,UAAU,aACb,wBAAIA,UAAU,SAAd,WACA,kBAAC,EAAD,CACEJ,MAAOW,EAAM+B,MACbzC,YAAaU,EAAMgC,KACnBzC,OAAQS,EAAMiC,OACdzC,OAAQQ,EAAMkC,Y,QE1FbC,EAAb,4MACEC,MAAQ,CACNtC,OAAQuC,GAFZ,EAKEC,YAAc,SAACC,GACR,EAAKH,MAAMtC,OAAO0C,MAAK,SAAAxC,GAAK,OAAIA,EAAMR,SAAW+C,EAAS/C,WAC7D,EAAKiD,UAAS,SAAAC,GAAS,MAAK,CAC1B5C,OAAO,GAAD,mBAAM4C,EAAU5C,QAAhB,CAAwByC,SARtC,4CAaE,WACE,IAAQzC,EAAW6C,KAAKP,MAAhBtC,OAER,OACE,yBAAKL,UAAU,QACb,yBAAKA,UAAU,gBACb,kBAAC,EAAD,CAAYK,OAAQA,KAEtB,yBAAKL,UAAU,WACb,kBAAC,EAAD,CACEU,SAAUwC,KAAKL,oBAvB3B,GAAyBM,aCDzBC,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,eAAe,W","file":"static/js/main.022f1d56.chunk.js","sourcesContent":["import React from 'react';\nimport './MovieCard.scss';\nimport PropTypes from 'prop-types';\n\nexport const MovieCard = ({\n  title,\n  description = '',\n  imgUrl,\n  imdbId,\n}) => (\n  <div className=\"card\">\n    <div className=\"card-image\">\n      <figure className=\"image is-4by3\">\n        <img\n          src={imgUrl}\n          alt=\"Film logo\"\n        />\n      </figure>\n    </div>\n    <div className=\"card-content\">\n      <div className=\"media\">\n        <div className=\"media-left\">\n          <figure className=\"image is-48x48\">\n            <img\n              src=\"images/imdb-logo.jpeg\"\n              alt=\"imdb\"\n            />\n          </figure>\n        </div>\n        <div className=\"media-content\">\n          <p className=\"title is-8\">{title}</p>\n        </div>\n      </div>\n\n      <div className=\"content\">\n        {description}\n        <br />\n        <a href={`https://www.imdb.com/title/${imdbId}`}>IMDB</a>\n      </div>\n    </div>\n  </div>\n);\n\nMovieCard.propTypes = {\n  title: PropTypes.string.isRequired,\n  description: PropTypes.string.isRequired,\n  imgUrl: PropTypes.string.isRequired,\n  imdbId: PropTypes.string.isRequired,\n};\n","import React from 'react';\n\nimport './MoviesList.scss';\nimport PropTypes from 'prop-types';\nimport { MovieCard } from '../MovieCard';\n\nexport const MoviesList = ({\n  movies = [],\n}) => (\n  <div className=\"movies\">\n    {movies.map(movie => (\n      <MovieCard key={movie.imdbId} {...movie} />\n    ))}\n  </div>\n);\n\nMoviesList.propTypes = {\n  movies: PropTypes.arrayOf(\n    PropTypes.shape({\n      imdbId: PropTypes.string.isRequired,\n    }).isRequired,\n  ).isRequired,\n};\n","import React, { useState } from 'react';\nimport './FindMovie.scss';\nimport classNames from 'classnames';\nimport propTypes from 'prop-types';\n\nimport { MovieCard } from '../MovieCard';\nimport { BASE_API } from '../../api/api';\n\nexport const FindMovie = ({ onSubmit }) => {\n  const [movieTitle, findMovieByTitle] = useState('');\n  const [movie, addfoundMovie] = useState({});\n  const [isMovieExsist, changeInputValidation] = useState(true);\n\n  const isDanger = 'is-danger';\n\n  const getMovieFromServer = () => fetch(`${BASE_API}&t=${movieTitle}`)\n    .then(response => response.json())\n    .then(result => result);\n\n  return (\n    <>\n      <form className=\"find-movie\">\n        <div className=\"field\">\n          <label className=\"label\" htmlFor=\"movie-title\">\n            Movie title\n          </label>\n\n          <div className=\"control\">\n            <input\n              type=\"text\"\n              id=\"movie-title\"\n              placeholder=\"Enter a title to search\"\n              // className=\"input is-danger\"\n              className={classNames('input', { [isDanger]: !isMovieExsist })}\n              value={movieTitle}\n              onChange={(event) => {\n                findMovieByTitle(event.target.value);\n                changeInputValidation(true);\n              }}\n            />\n          </div>\n\n          <p className=\"help is-danger\">\n            {!isMovieExsist && `Can't find a movie with such a title`}\n          </p>\n        </div>\n\n        <div className=\"field is-grouped\">\n          <div className=\"control\">\n            <button\n              type=\"button\"\n              className=\"button is-light\"\n              onClick={async() => {\n                const foundMovie = await getMovieFromServer();\n\n                if (foundMovie.Response === 'True') {\n                  addfoundMovie(foundMovie);\n                } else {\n                  changeInputValidation(false);\n                }\n              }}\n            >\n              Find a movie\n            </button>\n          </div>\n\n          <div className=\"control\">\n            <button\n              type=\"button\"\n              className=\"button is-primary\"\n              onClick={() => {\n                if (Object.keys(movie).length > 0) {\n                  onSubmit({\n                    title: movie.Title,\n                    description: movie.Plot,\n                    imgUrl: movie.Poster,\n                    imdbId: movie.imdbID,\n                  });\n                  findMovieByTitle('');\n                  addfoundMovie({});\n                }\n              }}\n            >\n              Add to the list\n            </button>\n          </div>\n        </div>\n      </form>\n\n      {Object.keys(movie).length > 0 && (\n        <div className=\"container\">\n          <h2 className=\"title\">Preview</h2>\n          <MovieCard\n            title={movie.Title}\n            description={movie.Plot}\n            imgUrl={movie.Poster}\n            imdbId={movie.imdbID}\n          />\n        </div>\n      )}\n    </>\n  );\n};\n\nFindMovie.propTypes = {\n  onSubmit: propTypes.func.isRequired,\n};\n","export const BASE_API = 'https://www.omdbapi.com/?apikey=28d695f1';\n","import React, { Component } from 'react';\nimport './App.scss';\nimport { MoviesList } from './components/MoviesList';\nimport { FindMovie } from './components/FindMovie';\nimport data from './api/movies.json';\n\nexport class App extends Component {\n  state = {\n    movies: data,\n  };\n\n  addNewMovie = (newMovie) => {\n    if (!this.state.movies.find(movie => movie.imdbId === newMovie.imdbId)) {\n      this.setState(prevState => ({\n        movies: [...prevState.movies, newMovie],\n      }));\n    }\n  }\n\n  render() {\n    const { movies } = this.state;\n\n    return (\n      <div className=\"page\">\n        <div className=\"page-content\">\n          <MoviesList movies={movies} />\n        </div>\n        <div className=\"sidebar\">\n          <FindMovie\n            onSubmit={this.addNewMovie}\n          />\n        </div>\n      </div>\n    );\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'bulma/css/bulma.css';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}